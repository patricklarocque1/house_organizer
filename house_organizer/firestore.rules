rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function usersDoc(uid) {
      return get(/databases/$(database)/documents/users/$(uid));
    }

    function userRole(uid) {
      return usersDoc(uid).data.role;
    }

    function isAdmin() {
      return isSignedIn() && userRole(request.auth.uid) == 'admin';
    }

    function houseDoc(houseId) {
      return get(/databases/$(database)/documents/houses/$(houseId));
    }

    function houseExists(houseId) {
      return exists(/databases/$(database)/documents/houses/$(houseId));
    }

    function isSupervisorOf(houseId) {
      return isSignedIn() &&
        houseExists(houseId) &&
        (request.auth.uid in houseDoc(houseId).data.supervisorIds);
    }

    function isResidentOf(houseId) {
      return isSignedIn() &&
        houseExists(houseId) &&
        (request.auth.uid in houseDoc(houseId).data.residentIds);
    }

    function canAccessHouse(houseId) {
      return isAdmin() || isSupervisorOf(houseId) || isResidentOf(houseId);
    }

    function isSupervisorOfUser(uid) {
      return isSignedIn() && isSupervisorOf(usersDoc(uid).data.houseId);
    }

    match /users/{uid} {
      allow read: if isSignedIn() && (
        request.auth.uid == uid || isAdmin() || isSupervisorOfUser(uid)
      );

      allow update: if isSignedIn() && (
        (request.auth.uid == uid &&
          request.resource.data.diff(resource.data).changedKeys().hasOnly([
            'displayName','profileImageUrl','isActive','updatedAt'
          ])
        ) || isAdmin()
      );

      allow create: if isSignedIn() && (request.auth.uid == uid || isAdmin());

      allow delete: if isAdmin();
    }

    match /houses/{houseId} {
      allow read: if isSignedIn() && canAccessHouse(houseId);
      allow create: if isSignedIn();
      allow update, delete: if isAdmin() || isSupervisorOf(houseId);
    }

    match /tasks/{taskId} {
      allow read: if isSignedIn() && canAccessHouse(resource.data.houseId);

      allow create: if isSignedIn() && (
        isAdmin() || isSupervisorOf(request.resource.data.houseId)
      );

      allow update, delete: if isSignedIn() && (
        isAdmin() ||
        isSupervisorOf(resource.data.houseId) ||
        request.auth.uid == resource.data.createdBy
      );
    }

    match /lists/{listId} {
      allow read: if isSignedIn() && canAccessHouse(resource.data.houseId);

      allow create: if isSignedIn() && (
        isAdmin() || isSupervisorOf(request.resource.data.houseId)
      );

      allow update, delete: if isSignedIn() && (
        isAdmin() ||
        isSupervisorOf(resource.data.houseId) ||
        request.auth.uid == resource.data.createdBy
      );
    }

    match /audit_logs/{logId} {
      allow read: if isSignedIn() && (isAdmin() || isSupervisorOf(resource.data.houseId));
      allow create, update, delete: if false;
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
