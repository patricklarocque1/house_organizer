"""
✨ `GroceryItem_KeyOutput` returns the primary key fields of table type `GroceryItem`.

It has the same format as `GroceryItem_Key`, but is only used as mutation return value.
"""
scalar GroceryItem_KeyOutput
"""
✨ `GroupHome_KeyOutput` returns the primary key fields of table type `GroupHome`.

It has the same format as `GroupHome_Key`, but is only used as mutation return value.
"""
scalar GroupHome_KeyOutput
"""
✨ `Notification_KeyOutput` returns the primary key fields of table type `Notification`.

It has the same format as `Notification_Key`, but is only used as mutation return value.
"""
scalar Notification_KeyOutput
"""
✨ `Task_KeyOutput` returns the primary key fields of table type `Task`.

It has the same format as `Task_Key`, but is only used as mutation return value.
"""
scalar Task_KeyOutput
"""
✨ `User_KeyOutput` returns the primary key fields of table type `User`.

It has the same format as `User_Key`, but is only used as mutation return value.
"""
scalar User_KeyOutput
"""
✨ Generated data input type for table 'GroceryItem'. It includes all necessary fields for creating or upserting rows into table.
"""
input GroceryItem_Data {
  """
  ✨ Generated from Field `GroceryItem`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `GroceryItem`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `GroceryItem`.`addedByUserId` of type `UUID!`
  """
  addedByUserId: UUID
  """
  ✨ `_expr` server value variant of `addedByUserId` (✨ Generated from Field `GroceryItem`.`addedByUserId` of type `UUID!`)
  """
  addedByUserId_expr: UUID_Expr
  """
  ✨ Generated from Field `GroceryItem`.`groupHomeId` of type `UUID!`
  """
  groupHomeId: UUID
  """
  ✨ `_expr` server value variant of `groupHomeId` (✨ Generated from Field `GroceryItem`.`groupHomeId` of type `UUID!`)
  """
  groupHomeId_expr: UUID_Expr
  """
  ✨ Generated from Field `GroceryItem`.`purchasedByUserId` of type `UUID`
  """
  purchasedByUserId: UUID
  """
  ✨ `_expr` server value variant of `purchasedByUserId` (✨ Generated from Field `GroceryItem`.`purchasedByUserId` of type `UUID`)
  """
  purchasedByUserId_expr: UUID_Expr
  """
  ✨ Generated from Field `GroceryItem`.`addedByUser` of type `User!`
  """
  addedByUser: User_Key
  """
  ✨ Generated from Field `GroceryItem`.`groupHome` of type `GroupHome!`
  """
  groupHome: GroupHome_Key
  """
  ✨ Generated from Field `GroceryItem`.`purchasedByUser` of type `User`
  """
  purchasedByUser: User_Key
  """
  ✨ Generated from Field `GroceryItem`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `GroceryItem`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `GroceryItem`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `GroceryItem`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `GroceryItem`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `GroceryItem`.`name` of type `String!`)
  """
  name_expr: String_Expr
  """
  ✨ Generated from Field `GroceryItem`.`notes` of type `String`
  """
  notes: String
  """
  ✨ `_expr` server value variant of `notes` (✨ Generated from Field `GroceryItem`.`notes` of type `String`)
  """
  notes_expr: String_Expr
  """
  ✨ Generated from Field `GroceryItem`.`purchasedAt` of type `Timestamp`
  """
  purchasedAt: Timestamp
  """
  ✨ `_expr` server value variant of `purchasedAt` (✨ Generated from Field `GroceryItem`.`purchasedAt` of type `Timestamp`)
  """
  purchasedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `purchasedAt` (✨ Generated from Field `GroceryItem`.`purchasedAt` of type `Timestamp`)
  """
  purchasedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `purchasedAt` (✨ Generated from Field `GroceryItem`.`purchasedAt` of type `Timestamp`)
  """
  purchasedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `GroceryItem`.`quantity` of type `Int`
  """
  quantity: Int
  """
  ✨ `_expr` server value variant of `quantity` (✨ Generated from Field `GroceryItem`.`quantity` of type `Int`)
  """
  quantity_expr: Int_Expr
  """
  ✨ `_update` server value variant of `quantity` (✨ Generated from Field `GroceryItem`.`quantity` of type `Int`)
  """
  quantity_update: [Int_Update!]
  """
  ✨ Generated from Field `GroceryItem`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `GroceryItem`.`status` of type `String!`)
  """
  status_expr: String_Expr
}
"""
✨ Generated filter input type for table 'GroceryItem'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input GroceryItem_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [GroceryItem_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: GroceryItem_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [GroceryItem_Filter!]
  """
  ✨ Generated from Field `GroceryItem`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `GroceryItem`.`addedByUserId` of type `UUID!`
  """
  addedByUserId: UUID_Filter
  """
  ✨ Generated from Field `GroceryItem`.`groupHomeId` of type `UUID!`
  """
  groupHomeId: UUID_Filter
  """
  ✨ Generated from Field `GroceryItem`.`purchasedByUserId` of type `UUID`
  """
  purchasedByUserId: UUID_Filter
  """
  ✨ Generated from Field `GroceryItem`.`addedByUser` of type `User!`
  """
  addedByUser: User_Filter
  """
  ✨ Generated from Field `GroceryItem`.`groupHome` of type `GroupHome!`
  """
  groupHome: GroupHome_Filter
  """
  ✨ Generated from Field `GroceryItem`.`purchasedByUser` of type `User`
  """
  purchasedByUser: User_Filter
  """
  ✨ Generated from Field `GroceryItem`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `GroceryItem`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `GroceryItem`.`notes` of type `String`
  """
  notes: String_Filter
  """
  ✨ Generated from Field `GroceryItem`.`purchasedAt` of type `Timestamp`
  """
  purchasedAt: Timestamp_Filter
  """
  ✨ Generated from Field `GroceryItem`.`quantity` of type `Int`
  """
  quantity: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`status` of type `String!`
  """
  status: String_Filter
  """
  ✨ Generated from Field `GroceryItem`.`notifications_on_relatedGroceryItem` of type `[Notification!]!`
  """
  notifications_on_relatedGroceryItem: Notification_ListFilter
}
"""
✨ Generated first-row input type for table 'GroceryItem'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input GroceryItem_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [GroceryItem_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: GroceryItem_Filter
}
"""
✨ Generated having input type for table 'GroceryItem'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input GroceryItem_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [GroceryItem_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: GroceryItem_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [GroceryItem_Having!]
  """
  ✨ Generated from Field `GroceryItem`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`addedByUserId_count` of type `Int!`
  """
  addedByUserId_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`groupHomeId_count` of type `Int!`
  """
  groupHomeId_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`notes_count` of type `Int!`
  """
  notes_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`purchasedAt_count` of type `Int!`
  """
  purchasedAt_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`purchasedByUserId_count` of type `Int!`
  """
  purchasedByUserId_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`quantity_count` of type `Int!`
  """
  quantity_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`quantity_sum` of type `Int`
  """
  quantity_sum: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`quantity_avg` of type `Float`
  """
  quantity_avg: Float_Filter
  """
  ✨ Generated from Field `GroceryItem`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `GroceryItem`.`purchasedAt_min` of type `Timestamp`
  """
  purchasedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `GroceryItem`.`quantity_min` of type `Int`
  """
  quantity_min: Int_Filter
  """
  ✨ Generated from Field `GroceryItem`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `GroceryItem`.`purchasedAt_max` of type `Timestamp`
  """
  purchasedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `GroceryItem`.`quantity_max` of type `Int`
  """
  quantity_max: Int_Filter
}
"""
✨ Generated key input type for table 'GroceryItem'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input GroceryItem_Key {
  """
  ✨ Generated from Field `GroceryItem`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `GroceryItem`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'GroceryItem'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input GroceryItem_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: GroceryItem_Filter
}
"""
✨ Generated order input type for table 'GroceryItem'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input GroceryItem_Order {
  """
  ✨ Generated from Field `GroceryItem`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`addedByUserId` of type `UUID!`
  """
  addedByUserId: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`groupHomeId` of type `UUID!`
  """
  groupHomeId: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`purchasedByUserId` of type `UUID`
  """
  purchasedByUserId: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`addedByUser` of type `User!`
  """
  addedByUser: User_Order
  """
  ✨ Generated from Field `GroceryItem`.`groupHome` of type `GroupHome!`
  """
  groupHome: GroupHome_Order
  """
  ✨ Generated from Field `GroceryItem`.`purchasedByUser` of type `User`
  """
  purchasedByUser: User_Order
  """
  ✨ Generated from Field `GroceryItem`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`notes` of type `String`
  """
  notes: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`purchasedAt` of type `Timestamp`
  """
  purchasedAt: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`quantity` of type `Int`
  """
  quantity: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`addedByUserId_count` of type `Int!`
  """
  addedByUserId_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`groupHomeId_count` of type `Int!`
  """
  groupHomeId_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`name_count` of type `Int!`
  """
  name_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`notes_count` of type `Int!`
  """
  notes_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`purchasedAt_count` of type `Int!`
  """
  purchasedAt_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`purchasedByUserId_count` of type `Int!`
  """
  purchasedByUserId_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`quantity_count` of type `Int!`
  """
  quantity_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`status_count` of type `Int!`
  """
  status_count: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`quantity_sum` of type `Int`
  """
  quantity_sum: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`quantity_avg` of type `Float`
  """
  quantity_avg: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`purchasedAt_min` of type `Timestamp`
  """
  purchasedAt_min: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`quantity_min` of type `Int`
  """
  quantity_min: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`purchasedAt_max` of type `Timestamp`
  """
  purchasedAt_max: OrderDirection
  """
  ✨ Generated from Field `GroceryItem`.`quantity_max` of type `Int`
  """
  quantity_max: OrderDirection
}
"""
✨ Generated data input type for table 'GroupHome'. It includes all necessary fields for creating or upserting rows into table.
"""
input GroupHome_Data {
  """
  ✨ Generated from Field `GroupHome`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `GroupHome`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `GroupHome`.`adminUserId` of type `UUID!`
  """
  adminUserId: UUID
  """
  ✨ `_expr` server value variant of `adminUserId` (✨ Generated from Field `GroupHome`.`adminUserId` of type `UUID!`)
  """
  adminUserId_expr: UUID_Expr
  """
  ✨ Generated from Field `GroupHome`.`adminUser` of type `User!`
  """
  adminUser: User_Key
  """
  ✨ Generated from Field `GroupHome`.`address` of type `String`
  """
  address: String
  """
  ✨ `_expr` server value variant of `address` (✨ Generated from Field `GroupHome`.`address` of type `String`)
  """
  address_expr: String_Expr
  """
  ✨ Generated from Field `GroupHome`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `GroupHome`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `GroupHome`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `GroupHome`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `GroupHome`.`description` of type `String`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `GroupHome`.`description` of type `String`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `GroupHome`.`name` of type `String!`
  """
  name: String
  """
  ✨ `_expr` server value variant of `name` (✨ Generated from Field `GroupHome`.`name` of type `String!`)
  """
  name_expr: String_Expr
}
"""
✨ Generated filter input type for table 'GroupHome'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input GroupHome_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [GroupHome_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: GroupHome_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [GroupHome_Filter!]
  """
  ✨ Generated from Field `GroupHome`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `GroupHome`.`adminUserId` of type `UUID!`
  """
  adminUserId: UUID_Filter
  """
  ✨ Generated from Field `GroupHome`.`adminUser` of type `User!`
  """
  adminUser: User_Filter
  """
  ✨ Generated from Field `GroupHome`.`address` of type `String`
  """
  address: String_Filter
  """
  ✨ Generated from Field `GroupHome`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `GroupHome`.`description` of type `String`
  """
  description: String_Filter
  """
  ✨ Generated from Field `GroupHome`.`name` of type `String!`
  """
  name: String_Filter
  """
  ✨ Generated from Field `GroupHome`.`groceryItems_on_groupHome` of type `[GroceryItem!]!`
  """
  groceryItems_on_groupHome: GroceryItem_ListFilter
  """
  ✨ Generated from Field `GroupHome`.`tasks_on_groupHome` of type `[Task!]!`
  """
  tasks_on_groupHome: Task_ListFilter
  """
  ✨ Generated from Field `GroupHome`.`users_on_groupHome` of type `[User!]!`
  """
  users_on_groupHome: User_ListFilter
}
"""
✨ Generated first-row input type for table 'GroupHome'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input GroupHome_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [GroupHome_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: GroupHome_Filter
}
"""
✨ Generated having input type for table 'GroupHome'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input GroupHome_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [GroupHome_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: GroupHome_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [GroupHome_Having!]
  """
  ✨ Generated from Field `GroupHome`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `GroupHome`.`address_count` of type `Int!`
  """
  address_count: Int_Filter
  """
  ✨ Generated from Field `GroupHome`.`adminUserId_count` of type `Int!`
  """
  adminUserId_count: Int_Filter
  """
  ✨ Generated from Field `GroupHome`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `GroupHome`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `GroupHome`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `GroupHome`.`name_count` of type `Int!`
  """
  name_count: Int_Filter
  """
  ✨ Generated from Field `GroupHome`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `GroupHome`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'GroupHome'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input GroupHome_Key {
  """
  ✨ Generated from Field `GroupHome`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `GroupHome`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'GroupHome'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input GroupHome_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: GroupHome_Filter
}
"""
✨ Generated order input type for table 'GroupHome'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input GroupHome_Order {
  """
  ✨ Generated from Field `GroupHome`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`adminUserId` of type `UUID!`
  """
  adminUserId: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`adminUser` of type `User!`
  """
  adminUser: User_Order
  """
  ✨ Generated from Field `GroupHome`.`address` of type `String`
  """
  address: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`description` of type `String`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`name` of type `String!`
  """
  name: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`address_count` of type `Int!`
  """
  address_count: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`adminUserId_count` of type `Int!`
  """
  adminUserId_count: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`name_count` of type `Int!`
  """
  name_count: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `GroupHome`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'Notification'. It includes all necessary fields for creating or upserting rows into table.
"""
input Notification_Data {
  """
  ✨ Generated from Field `Notification`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Notification`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Notification`.`relatedGroceryItemId` of type `UUID`
  """
  relatedGroceryItemId: UUID
  """
  ✨ `_expr` server value variant of `relatedGroceryItemId` (✨ Generated from Field `Notification`.`relatedGroceryItemId` of type `UUID`)
  """
  relatedGroceryItemId_expr: UUID_Expr
  """
  ✨ Generated from Field `Notification`.`relatedTaskId` of type `UUID`
  """
  relatedTaskId: UUID
  """
  ✨ `_expr` server value variant of `relatedTaskId` (✨ Generated from Field `Notification`.`relatedTaskId` of type `UUID`)
  """
  relatedTaskId_expr: UUID_Expr
  """
  ✨ Generated from Field `Notification`.`userId` of type `UUID!`
  """
  userId: UUID
  """
  ✨ `_expr` server value variant of `userId` (✨ Generated from Field `Notification`.`userId` of type `UUID!`)
  """
  userId_expr: UUID_Expr
  """
  ✨ Generated from Field `Notification`.`relatedGroceryItem` of type `GroceryItem`
  """
  relatedGroceryItem: GroceryItem_Key
  """
  ✨ Generated from Field `Notification`.`relatedTask` of type `Task`
  """
  relatedTask: Task_Key
  """
  ✨ Generated from Field `Notification`.`user` of type `User!`
  """
  user: User_Key
  """
  ✨ Generated from Field `Notification`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Notification`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Notification`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Notification`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Notification`.`message` of type `String!`
  """
  message: String
  """
  ✨ `_expr` server value variant of `message` (✨ Generated from Field `Notification`.`message` of type `String!`)
  """
  message_expr: String_Expr
  """
  ✨ Generated from Field `Notification`.`read` of type `Boolean!`
  """
  read: Boolean
  """
  ✨ `_expr` server value variant of `read` (✨ Generated from Field `Notification`.`read` of type `Boolean!`)
  """
  read_expr: Boolean_Expr
  """
  ✨ Generated from Field `Notification`.`type` of type `String!`
  """
  type: String
  """
  ✨ `_expr` server value variant of `type` (✨ Generated from Field `Notification`.`type` of type `String!`)
  """
  type_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Notification'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Notification_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Notification_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Notification_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Notification_Filter!]
  """
  ✨ Generated from Field `Notification`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Notification`.`relatedGroceryItemId` of type `UUID`
  """
  relatedGroceryItemId: UUID_Filter
  """
  ✨ Generated from Field `Notification`.`relatedTaskId` of type `UUID`
  """
  relatedTaskId: UUID_Filter
  """
  ✨ Generated from Field `Notification`.`userId` of type `UUID!`
  """
  userId: UUID_Filter
  """
  ✨ Generated from Field `Notification`.`relatedGroceryItem` of type `GroceryItem`
  """
  relatedGroceryItem: GroceryItem_Filter
  """
  ✨ Generated from Field `Notification`.`relatedTask` of type `Task`
  """
  relatedTask: Task_Filter
  """
  ✨ Generated from Field `Notification`.`user` of type `User!`
  """
  user: User_Filter
  """
  ✨ Generated from Field `Notification`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Notification`.`message` of type `String!`
  """
  message: String_Filter
  """
  ✨ Generated from Field `Notification`.`read` of type `Boolean!`
  """
  read: Boolean_Filter
  """
  ✨ Generated from Field `Notification`.`type` of type `String!`
  """
  type: String_Filter
}
"""
✨ Generated first-row input type for table 'Notification'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Notification_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Notification_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Notification_Filter
}
"""
✨ Generated having input type for table 'Notification'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Notification_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Notification_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Notification_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Notification_Having!]
  """
  ✨ Generated from Field `Notification`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Notification`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Notification`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Notification`.`message_count` of type `Int!`
  """
  message_count: Int_Filter
  """
  ✨ Generated from Field `Notification`.`read_count` of type `Int!`
  """
  read_count: Int_Filter
  """
  ✨ Generated from Field `Notification`.`relatedGroceryItemId_count` of type `Int!`
  """
  relatedGroceryItemId_count: Int_Filter
  """
  ✨ Generated from Field `Notification`.`relatedTaskId_count` of type `Int!`
  """
  relatedTaskId_count: Int_Filter
  """
  ✨ Generated from Field `Notification`.`type_count` of type `Int!`
  """
  type_count: Int_Filter
  """
  ✨ Generated from Field `Notification`.`userId_count` of type `Int!`
  """
  userId_count: Int_Filter
  """
  ✨ Generated from Field `Notification`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Notification`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Notification'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Notification_Key {
  """
  ✨ Generated from Field `Notification`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Notification`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Notification'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Notification_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Notification_Filter
}
"""
✨ Generated order input type for table 'Notification'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Notification_Order {
  """
  ✨ Generated from Field `Notification`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Notification`.`relatedGroceryItemId` of type `UUID`
  """
  relatedGroceryItemId: OrderDirection
  """
  ✨ Generated from Field `Notification`.`relatedTaskId` of type `UUID`
  """
  relatedTaskId: OrderDirection
  """
  ✨ Generated from Field `Notification`.`userId` of type `UUID!`
  """
  userId: OrderDirection
  """
  ✨ Generated from Field `Notification`.`relatedGroceryItem` of type `GroceryItem`
  """
  relatedGroceryItem: GroceryItem_Order
  """
  ✨ Generated from Field `Notification`.`relatedTask` of type `Task`
  """
  relatedTask: Task_Order
  """
  ✨ Generated from Field `Notification`.`user` of type `User!`
  """
  user: User_Order
  """
  ✨ Generated from Field `Notification`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Notification`.`message` of type `String!`
  """
  message: OrderDirection
  """
  ✨ Generated from Field `Notification`.`read` of type `Boolean!`
  """
  read: OrderDirection
  """
  ✨ Generated from Field `Notification`.`type` of type `String!`
  """
  type: OrderDirection
  """
  ✨ Generated from Field `Notification`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Notification`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Notification`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Notification`.`message_count` of type `Int!`
  """
  message_count: OrderDirection
  """
  ✨ Generated from Field `Notification`.`read_count` of type `Int!`
  """
  read_count: OrderDirection
  """
  ✨ Generated from Field `Notification`.`relatedGroceryItemId_count` of type `Int!`
  """
  relatedGroceryItemId_count: OrderDirection
  """
  ✨ Generated from Field `Notification`.`relatedTaskId_count` of type `Int!`
  """
  relatedTaskId_count: OrderDirection
  """
  ✨ Generated from Field `Notification`.`type_count` of type `Int!`
  """
  type_count: OrderDirection
  """
  ✨ Generated from Field `Notification`.`userId_count` of type `Int!`
  """
  userId_count: OrderDirection
  """
  ✨ Generated from Field `Notification`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Notification`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
"""
✨ Generated data input type for table 'Task'. It includes all necessary fields for creating or upserting rows into table.
"""
input Task_Data {
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Task`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `Task`.`assignedToUserId` of type `UUID!`
  """
  assignedToUserId: UUID
  """
  ✨ `_expr` server value variant of `assignedToUserId` (✨ Generated from Field `Task`.`assignedToUserId` of type `UUID!`)
  """
  assignedToUserId_expr: UUID_Expr
  """
  ✨ Generated from Field `Task`.`completedByUserId` of type `UUID`
  """
  completedByUserId: UUID
  """
  ✨ `_expr` server value variant of `completedByUserId` (✨ Generated from Field `Task`.`completedByUserId` of type `UUID`)
  """
  completedByUserId_expr: UUID_Expr
  """
  ✨ Generated from Field `Task`.`groupHomeId` of type `UUID!`
  """
  groupHomeId: UUID
  """
  ✨ `_expr` server value variant of `groupHomeId` (✨ Generated from Field `Task`.`groupHomeId` of type `UUID!`)
  """
  groupHomeId_expr: UUID_Expr
  """
  ✨ Generated from Field `Task`.`assignedToUser` of type `User!`
  """
  assignedToUser: User_Key
  """
  ✨ Generated from Field `Task`.`completedByUser` of type `User`
  """
  completedByUser: User_Key
  """
  ✨ Generated from Field `Task`.`groupHome` of type `GroupHome!`
  """
  groupHome: GroupHome_Key
  """
  ✨ Generated from Field `Task`.`completedAt` of type `Timestamp`
  """
  completedAt: Timestamp
  """
  ✨ `_expr` server value variant of `completedAt` (✨ Generated from Field `Task`.`completedAt` of type `Timestamp`)
  """
  completedAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `completedAt` (✨ Generated from Field `Task`.`completedAt` of type `Timestamp`)
  """
  completedAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `completedAt` (✨ Generated from Field `Task`.`completedAt` of type `Timestamp`)
  """
  completedAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Task`.`description` of type `String!`
  """
  description: String
  """
  ✨ `_expr` server value variant of `description` (✨ Generated from Field `Task`.`description` of type `String!`)
  """
  description_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`dueDate` of type `Timestamp!`
  """
  dueDate: Timestamp
  """
  ✨ `_expr` server value variant of `dueDate` (✨ Generated from Field `Task`.`dueDate` of type `Timestamp!`)
  """
  dueDate_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `dueDate` (✨ Generated from Field `Task`.`dueDate` of type `Timestamp!`)
  """
  dueDate_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `dueDate` (✨ Generated from Field `Task`.`dueDate` of type `Timestamp!`)
  """
  dueDate_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `Task`.`recurrence` of type `String`
  """
  recurrence: String
  """
  ✨ `_expr` server value variant of `recurrence` (✨ Generated from Field `Task`.`recurrence` of type `String`)
  """
  recurrence_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`status` of type `String!`
  """
  status: String
  """
  ✨ `_expr` server value variant of `status` (✨ Generated from Field `Task`.`status` of type `String!`)
  """
  status_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`title` of type `String!`
  """
  title: String
  """
  ✨ `_expr` server value variant of `title` (✨ Generated from Field `Task`.`title` of type `String!`)
  """
  title_expr: String_Expr
  """
  ✨ Generated from Field `Task`.`type` of type `String!`
  """
  type: String
  """
  ✨ `_expr` server value variant of `type` (✨ Generated from Field `Task`.`type` of type `String!`)
  """
  type_expr: String_Expr
}
"""
✨ Generated filter input type for table 'Task'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Task_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [Task_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: Task_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [Task_Filter!]
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `Task`.`assignedToUserId` of type `UUID!`
  """
  assignedToUserId: UUID_Filter
  """
  ✨ Generated from Field `Task`.`completedByUserId` of type `UUID`
  """
  completedByUserId: UUID_Filter
  """
  ✨ Generated from Field `Task`.`groupHomeId` of type `UUID!`
  """
  groupHomeId: UUID_Filter
  """
  ✨ Generated from Field `Task`.`assignedToUser` of type `User!`
  """
  assignedToUser: User_Filter
  """
  ✨ Generated from Field `Task`.`completedByUser` of type `User`
  """
  completedByUser: User_Filter
  """
  ✨ Generated from Field `Task`.`groupHome` of type `GroupHome!`
  """
  groupHome: GroupHome_Filter
  """
  ✨ Generated from Field `Task`.`completedAt` of type `Timestamp`
  """
  completedAt: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`description` of type `String!`
  """
  description: String_Filter
  """
  ✨ Generated from Field `Task`.`dueDate` of type `Timestamp!`
  """
  dueDate: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`recurrence` of type `String`
  """
  recurrence: String_Filter
  """
  ✨ Generated from Field `Task`.`status` of type `String!`
  """
  status: String_Filter
  """
  ✨ Generated from Field `Task`.`title` of type `String!`
  """
  title: String_Filter
  """
  ✨ Generated from Field `Task`.`type` of type `String!`
  """
  type: String_Filter
  """
  ✨ Generated from Field `Task`.`notifications_on_relatedTask` of type `[Notification!]!`
  """
  notifications_on_relatedTask: Notification_ListFilter
}
"""
✨ Generated first-row input type for table 'Task'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input Task_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [Task_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: Task_Filter
}
"""
✨ Generated having input type for table 'Task'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input Task_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [Task_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: Task_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [Task_Having!]
  """
  ✨ Generated from Field `Task`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `Task`.`assignedToUserId_count` of type `Int!`
  """
  assignedToUserId_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`completedAt_count` of type `Int!`
  """
  completedAt_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`completedByUserId_count` of type `Int!`
  """
  completedByUserId_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`description_count` of type `Int!`
  """
  description_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`dueDate_count` of type `Int!`
  """
  dueDate_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`groupHomeId_count` of type `Int!`
  """
  groupHomeId_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`recurrence_count` of type `Int!`
  """
  recurrence_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`status_count` of type `Int!`
  """
  status_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`title_count` of type `Int!`
  """
  title_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`type_count` of type `Int!`
  """
  type_count: Int_Filter
  """
  ✨ Generated from Field `Task`.`completedAt_min` of type `Timestamp`
  """
  completedAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`dueDate_min` of type `Timestamp`
  """
  dueDate_min: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`completedAt_max` of type `Timestamp`
  """
  completedAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
  """
  ✨ Generated from Field `Task`.`dueDate_max` of type `Timestamp`
  """
  dueDate_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'Task'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input Task_Key {
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `Task`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'Task'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input Task_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: Task_Filter
}
"""
✨ Generated order input type for table 'Task'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input Task_Order {
  """
  ✨ Generated from Field `Task`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `Task`.`assignedToUserId` of type `UUID!`
  """
  assignedToUserId: OrderDirection
  """
  ✨ Generated from Field `Task`.`completedByUserId` of type `UUID`
  """
  completedByUserId: OrderDirection
  """
  ✨ Generated from Field `Task`.`groupHomeId` of type `UUID!`
  """
  groupHomeId: OrderDirection
  """
  ✨ Generated from Field `Task`.`assignedToUser` of type `User!`
  """
  assignedToUser: User_Order
  """
  ✨ Generated from Field `Task`.`completedByUser` of type `User`
  """
  completedByUser: User_Order
  """
  ✨ Generated from Field `Task`.`groupHome` of type `GroupHome!`
  """
  groupHome: GroupHome_Order
  """
  ✨ Generated from Field `Task`.`completedAt` of type `Timestamp`
  """
  completedAt: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `Task`.`description` of type `String!`
  """
  description: OrderDirection
  """
  ✨ Generated from Field `Task`.`dueDate` of type `Timestamp!`
  """
  dueDate: OrderDirection
  """
  ✨ Generated from Field `Task`.`recurrence` of type `String`
  """
  recurrence: OrderDirection
  """
  ✨ Generated from Field `Task`.`status` of type `String!`
  """
  status: OrderDirection
  """
  ✨ Generated from Field `Task`.`title` of type `String!`
  """
  title: OrderDirection
  """
  ✨ Generated from Field `Task`.`type` of type `String!`
  """
  type: OrderDirection
  """
  ✨ Generated from Field `Task`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `Task`.`assignedToUserId_count` of type `Int!`
  """
  assignedToUserId_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`completedAt_count` of type `Int!`
  """
  completedAt_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`completedByUserId_count` of type `Int!`
  """
  completedByUserId_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`description_count` of type `Int!`
  """
  description_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`dueDate_count` of type `Int!`
  """
  dueDate_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`groupHomeId_count` of type `Int!`
  """
  groupHomeId_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`recurrence_count` of type `Int!`
  """
  recurrence_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`status_count` of type `Int!`
  """
  status_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`title_count` of type `Int!`
  """
  title_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`type_count` of type `Int!`
  """
  type_count: OrderDirection
  """
  ✨ Generated from Field `Task`.`completedAt_min` of type `Timestamp`
  """
  completedAt_min: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `Task`.`dueDate_min` of type `Timestamp`
  """
  dueDate_min: OrderDirection
  """
  ✨ Generated from Field `Task`.`completedAt_max` of type `Timestamp`
  """
  completedAt_max: OrderDirection
  """
  ✨ Generated from Field `Task`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
  """
  ✨ Generated from Field `Task`.`dueDate_max` of type `Timestamp`
  """
  dueDate_max: OrderDirection
}
"""
✨ Generated data input type for table 'User'. It includes all necessary fields for creating or upserting rows into table.
"""
input User_Data {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`groupHomeId` of type `UUID`
  """
  groupHomeId: UUID
  """
  ✨ `_expr` server value variant of `groupHomeId` (✨ Generated from Field `User`.`groupHomeId` of type `UUID`)
  """
  groupHomeId_expr: UUID_Expr
  """
  ✨ Generated from Field `User`.`groupHome` of type `GroupHome`
  """
  groupHome: GroupHome_Key
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp
  """
  ✨ `_expr` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_expr: Timestamp_Expr
  """
  ✨ `_time` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_time: Timestamp_Relative
  """
  ✨ `_update` server value variant of `createdAt` (✨ Generated from Field `User`.`createdAt` of type `Timestamp!`)
  """
  createdAt_update: [Timestamp_Update!]
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String
  """
  ✨ `_expr` server value variant of `displayName` (✨ Generated from Field `User`.`displayName` of type `String!`)
  """
  displayName_expr: String_Expr
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String
  """
  ✨ `_expr` server value variant of `email` (✨ Generated from Field `User`.`email` of type `String!`)
  """
  email_expr: String_Expr
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: String
  """
  ✨ `_expr` server value variant of `photoUrl` (✨ Generated from Field `User`.`photoUrl` of type `String`)
  """
  photoUrl_expr: String_Expr
  """
  ✨ Generated from Field `User`.`role` of type `String!`
  """
  role: String
  """
  ✨ `_expr` server value variant of `role` (✨ Generated from Field `User`.`role` of type `String!`)
  """
  role_expr: String_Expr
}
"""
✨ Generated filter input type for table 'User'. This input allows filtering objects using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Filter {
  """
  Apply multiple filter conditions using `AND` logic.
  """
  _and: [User_Filter!]
  """
  Negate the result of the provided filter condition.
  """
  _not: User_Filter
  """
  Apply multiple filter conditions using `OR` logic.
  """
  _or: [User_Filter!]
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID_Filter
  """
  ✨ Generated from Field `User`.`groupHomeId` of type `UUID`
  """
  groupHomeId: UUID_Filter
  """
  ✨ Generated from Field `User`.`groupHome` of type `GroupHome`
  """
  groupHome: GroupHome_Filter
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: String_Filter
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: String_Filter
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: String_Filter
  """
  ✨ Generated from Field `User`.`role` of type `String!`
  """
  role: String_Filter
  """
  ✨ Generated from Field `User`.`groceryItems_on_addedByUser` of type `[GroceryItem!]!`
  """
  groceryItems_on_addedByUser: GroceryItem_ListFilter
  """
  ✨ Generated from Field `User`.`groceryItems_on_purchasedByUser` of type `[GroceryItem!]!`
  """
  groceryItems_on_purchasedByUser: GroceryItem_ListFilter
  """
  ✨ Generated from Field `User`.`groupHomes_on_adminUser` of type `[GroupHome!]!`
  """
  groupHomes_on_adminUser: GroupHome_ListFilter
  """
  ✨ Generated from Field `User`.`notifications_on_user` of type `[Notification!]!`
  """
  notifications_on_user: Notification_ListFilter
  """
  ✨ Generated from Field `User`.`tasks_on_assignedToUser` of type `[Task!]!`
  """
  tasks_on_assignedToUser: Task_ListFilter
  """
  ✨ Generated from Field `User`.`tasks_on_completedByUser` of type `[Task!]!`
  """
  tasks_on_completedByUser: Task_ListFilter
}
"""
✨ Generated first-row input type for table 'User'. This input selects the first row matching the filter criteria, ordered according to the specified conditions.
"""
input User_FirstRow {
  """
  Order the result by the specified fields.
  """
  orderBy: [User_Order!]
  """
  Filters rows based on the specified conditions.
  """
  where: User_Filter
}
"""
✨ Generated having input type for table 'User'. This input allows you to filter groups during aggregate queries using various conditions. Use `_or`, `_and`, and `_not` to compose complex filters.
"""
input User_Having {
  """
  Apply multiple Having conditions using `AND` logic.
  """
  _and: [User_Having!]
  """
  Whether to apply DISTINCT to the aggregate function.
  """
  _distinct: Boolean
  """
  Negate the result of the provided Having condition.
  """
  _not: User_Having
  """
  Apply multiple Having conditions using `OR` logic.
  """
  _or: [User_Having!]
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: Int_Filter
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: Int_Filter
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: Int_Filter
  """
  ✨ Generated from Field `User`.`groupHomeId_count` of type `Int!`
  """
  groupHomeId_count: Int_Filter
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: Int_Filter
  """
  ✨ Generated from Field `User`.`photoUrl_count` of type `Int!`
  """
  photoUrl_count: Int_Filter
  """
  ✨ Generated from Field `User`.`role_count` of type `Int!`
  """
  role_count: Int_Filter
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: Timestamp_Filter
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: Timestamp_Filter
}
"""
✨ Generated key input type for table 'User'. It represents the primary key fields used to uniquely identify a row in the table.
"""
input User_Key {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: UUID
  """
  ✨ `_expr` server value variant of `id` (✨ Generated from Field `User`.`id` of type `UUID!`)
  """
  id_expr: UUID_Expr
}
"""
✨ Generated list filter input type for table 'User'. This input applies filtering logic based on the count or existence of related objects that matches certain criteria.
"""
input User_ListFilter {
  """
  The desired number of objects that match the condition (defaults to at least one).
  """
  count: Int_Filter = {gt:0}
  """
  Condition of the related objects to filter for.
  """
  exist: User_Filter
}
"""
✨ Generated order input type for table 'User'. This input defines the sorting order of rows in query results based on one or more fields.
"""
input User_Order {
  """
  ✨ Generated from Field `User`.`id` of type `UUID!`
  """
  id: OrderDirection
  """
  ✨ Generated from Field `User`.`groupHomeId` of type `UUID`
  """
  groupHomeId: OrderDirection
  """
  ✨ Generated from Field `User`.`groupHome` of type `GroupHome`
  """
  groupHome: GroupHome_Order
  """
  ✨ Generated from Field `User`.`createdAt` of type `Timestamp!`
  """
  createdAt: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName` of type `String!`
  """
  displayName: OrderDirection
  """
  ✨ Generated from Field `User`.`email` of type `String!`
  """
  email: OrderDirection
  """
  ✨ Generated from Field `User`.`photoUrl` of type `String`
  """
  photoUrl: OrderDirection
  """
  ✨ Generated from Field `User`.`role` of type `String!`
  """
  role: OrderDirection
  """
  ✨ Generated from Field `User`.`_count` of type `Int!`
  """
  _count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_count` of type `Int!`
  """
  createdAt_count: OrderDirection
  """
  ✨ Generated from Field `User`.`displayName_count` of type `Int!`
  """
  displayName_count: OrderDirection
  """
  ✨ Generated from Field `User`.`email_count` of type `Int!`
  """
  email_count: OrderDirection
  """
  ✨ Generated from Field `User`.`groupHomeId_count` of type `Int!`
  """
  groupHomeId_count: OrderDirection
  """
  ✨ Generated from Field `User`.`id_count` of type `Int!`
  """
  id_count: OrderDirection
  """
  ✨ Generated from Field `User`.`photoUrl_count` of type `Int!`
  """
  photoUrl_count: OrderDirection
  """
  ✨ Generated from Field `User`.`role_count` of type `Int!`
  """
  role_count: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_min` of type `Timestamp`
  """
  createdAt_min: OrderDirection
  """
  ✨ Generated from Field `User`.`createdAt_max` of type `Timestamp`
  """
  createdAt_max: OrderDirection
}
